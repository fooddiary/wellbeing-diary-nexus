
import { useState } from "react";

const SettingsPage = () => {
  const [theme, setTheme] = useState("light");
  const [waterWidget, setWaterWidget] = useState(true);
  const [mealCountWidget, setMealCountWidget] = useState(true);
  const [weightWidget, setWeightWidget] = useState(true);
  const [height, setHeight] = useState("170");
  const [weight, setWeight] = useState("70");
  
  const handleSaveSettings = () => {
    // Here we would save settings to local storage or a database
    alert("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!");
  };

  return (
    <div className="space-y-6">
      <h2 className="text-2xl font-bold mb-6">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
      
      <div className="space-y-6">
        <div className="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
          <h3 className="text-lg font-medium mb-4">‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ã–µ</h3>
          
          <div className="space-y-4">
            <div>
              <label className="flex justify-between items-center">
                <span>üåì –¢–µ–º–∞</span>
                <select
                  value={theme}
                  onChange={(e) => setTheme(e.target.value)}
                  className="border border-gray-300 rounded p-2"
                >
                  <option value="light">–°–≤–µ—Ç–ª–∞—è</option>
                  <option value="dark">–¢—ë–º–Ω–∞—è</option>
                  <option value="system">–°–∏—Å—Ç–µ–º–Ω–∞—è</option>
                </select>
              </label>
            </div>
          </div>
        </div>
        
        <div className="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
          <h3 className="text-lg font-medium mb-4">üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞–º–∏</h3>
          
          <div className="space-y-3">
            <label className="flex items-center justify-between">
              <span>üíß –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤–æ–¥—ã</span>
              <div className="relative inline-block w-12 h-6 transition duration-200 ease-in-out rounded-full">
                <input
                  type="checkbox"
                  id="waterWidget"
                  checked={waterWidget}
                  onChange={(e) => setWaterWidget(e.target.checked)}
                  className="absolute w-0 h-0 opacity-0"
                />
                <label
                  htmlFor="waterWidget"
                  className={`block h-6 overflow-hidden rounded-full cursor-pointer ${
                    waterWidget ? "bg-primary" : "bg-gray-300"
                  }`}
                >
                  <span
                    className={`block h-6 w-6 rounded-full bg-white transform transition-transform duration-200 ${
                      waterWidget ? "translate-x-6" : "translate-x-0"
                    }`}
                  ></span>
                </label>
              </div>
            </label>
            
            <label className="flex items-center justify-between">
              <span>üçΩÔ∏è –°—á—ë—Ç—á–∏–∫ –ø—Ä–∏—ë–º–æ–≤ –ø–∏—â–∏</span>
              <div className="relative inline-block w-12 h-6 transition duration-200 ease-in-out rounded-full">
                <input
                  type="checkbox"
                  id="mealCountWidget"
                  checked={mealCountWidget}
                  onChange={(e) => setMealCountWidget(e.target.checked)}
                  className="absolute w-0 h-0 opacity-0"
                />
                <label
                  htmlFor="mealCountWidget"
                  className={`block h-6 overflow-hidden rounded-full cursor-pointer ${
                    mealCountWidget ? "bg-primary" : "bg-gray-300"
                  }`}
                >
                  <span
                    className={`block h-6 w-6 rounded-full bg-white transform transition-transform duration-200 ${
                      mealCountWidget ? "translate-x-6" : "translate-x-0"
                    }`}
                  ></span>
                </label>
              </div>
            </label>
            
            <label className="flex items-center justify-between">
              <span>‚öñÔ∏è –í–µ—Å</span>
              <div className="relative inline-block w-12 h-6 transition duration-200 ease-in-out rounded-full">
                <input
                  type="checkbox"
                  id="weightWidget"
                  checked={weightWidget}
                  onChange={(e) => setWeightWidget(e.target.checked)}
                  className="absolute w-0 h-0 opacity-0"
                />
                <label
                  htmlFor="weightWidget"
                  className={`block h-6 overflow-hidden rounded-full cursor-pointer ${
                    weightWidget ? "bg-primary" : "bg-gray-300"
                  }`}
                >
                  <span
                    className={`block h-6 w-6 rounded-full bg-white transform transition-transform duration-200 ${
                      weightWidget ? "translate-x-6" : "translate-x-0"
                    }`}
                  ></span>
                </label>
              </div>
            </label>
          </div>
        </div>
        
        <div className="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
          <h3 className="text-lg font-medium mb-4">üì¶ –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h3>
          
          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium mb-1">–†–æ—Å—Ç (—Å–º)</label>
              <input
                type="number"
                value={height}
                onChange={(e) => setHeight(e.target.value)}
                className="w-full border border-gray-300 rounded p-2"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium mb-1">–í–µ—Å (–∫–≥)</label>
              <input
                type="number"
                value={weight}
                onChange={(e) => setWeight(e.target.value)}
                className="w-full border border-gray-300 rounded p-2"
              />
              <p className="text-xs text-gray-500 mt-1">
                –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –≤–æ–¥–µ
              </p>
            </div>
          </div>
        </div>
        
        <div className="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
          <h3 className="text-lg font-medium mb-4">üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
          
          <div className="space-y-4">
            <button className="w-full border border-gray-300 bg-gray-50 hover:bg-gray-100 py-2 rounded">
              –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
            </button>
            
            <div className="flex items-center justify-between">
              <span>–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–æ—Ç–æ</span>
              <div className="relative inline-block w-12 h-6 transition duration-200 ease-in-out rounded-full">
                <input
                  type="checkbox"
                  id="autoCleanup"
                  className="absolute w-0 h-0 opacity-0"
                />
                <label
                  htmlFor="autoCleanup"
                  className="block h-6 overflow-hidden rounded-full bg-gray-300 cursor-pointer"
                >
                  <span className="block h-6 w-6 rounded-full bg-white transform transition-transform duration-200"></span>
                </label>
              </div>
            </div>
          </div>
        </div>
        
        <button
          onClick={handleSaveSettings}
          className="w-full bg-primary text-white py-3 rounded font-medium"
        >
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        </button>
      </div>
    </div>
  );
};

export default SettingsPage;
